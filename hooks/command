#!/bin/bash
set -euo pipefail

# Environment Variables
CLUBHOUSE_API_TOKEN="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_CLUBHOUSE_API_TOKEN"
CLUBHOUSE_RELEASE_STORY_ID="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_CLUBHOUSE_RELEASE_STORY_ID"
GITHUB_API_TOKEN="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_GITHUB_API_TOKEN"
GITHUB_PULL_NUMBER="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_GITHUB_PULL_NUMBER"
GITHUB_BASE_BRANCH="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_GITHUB_BASE_BRANCH"
GITHUB_HEAD_BRANCH="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_GITHUB_HEAD_BRANCH"
GITHUB_OWNER="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_GITHUB_OWNER"
GITHUB_REPO="$BUILDKITE_PLUGIN_CLUBHOUSE_RELEASE_GITHUB_REPO"

# helper variables
clubhouse_regex="ch([0-9]+)"
clubhouse_story_ids=()

pull_commits_response=$(curl -X GET \
    -H "Authorization: token ${GITHUB_API_TOKEN}" \
    -L "https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/pulls/${GITHUB_PULL_NUMBER}/commits")

commits=( $(jq -r '.[].commit.message' <<< "$pull_commits_response") )

# echo "${#commits[@]}"
# printf '%s\n' "${commits[@]}"

for commit in "${commits[@]}"; do
    # echo $commit
    if [[ $commit =~ $clubhouse_regex ]]
    then 
        # echo "found clubhouse story ${BASH_REMATCH[1]}"
        clubhouse_story_ids+=(${BASH_REMATCH[1]})
    fi
done

# printf '%s\n' "${clubhouse_story_ids[@]}"

generate_story_links_payload()
{
cat <<EOF
{
    "object_id": "$1",
    "subject_id": "$CLUBHOUSE_RELEASE_STORY_ID",
    "verb": "relates to"
}
EOF
}

for story_id in "${clubhouse_story_ids[@]}"; do 
    story_link_response=$(curl -X POST \
        -H "Content-Type: application/json" \
        -H "Clubhouse-Token: $CLUBHOUSE_API_TOKEN" \
        -d  "$(generate_story_links_payload $story_id)" \
        -L "https://api.clubhouse.io/api/v3/story-links")
    echo $story_link_response | jq '.'
done
